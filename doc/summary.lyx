#LyX 2.0.0beta4 created this file. For more info see http://www.lyx.org/
\lyxformat 412
\begin_document
\begin_header
\textclass extreport
\begin_preamble
\usepackage{fullpage}
\usepackage{framed}
\usepackage{listings}
\lstset{language=C, numbers=left, frame=single, xleftmargin=20pt, xrightmargin=40pt, basicstyle=\footnotesize, tabsize=2}

\newenvironment{boa}
{% This is the begin code
\begin{minipage}[t]{0.8\columnwidth}%
%  \begin{framed}
%    \texttt
\footnotesize
     
}
{% This is the end code
%  \end{framed}
\end{minipage}\\
 }
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title

\series bold
\size giant
boa
\series default
\size default
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\begin_inset space ~
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\begin_inset Graphics
	filename /home/gai/boa/boa.png
	lyxscale 33
	height 50pt

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset

Buffer Overrun Analyzer
\end_layout

\begin_layout Author
Edo Cohen
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash

\backslash
 039374814 
\backslash

\backslash
 sedoc@t2 
\backslash
and 
\end_layout

\end_inset

Tzafrir Rehan
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash

\backslash
 039811880 
\backslash

\backslash
 tzafrir@cs 
\backslash
and 
\end_layout

\end_inset

Gai Shaked
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash

\backslash
 036567055 
\backslash

\backslash
 gai@tx
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Section
Goal
\end_layout

\begin_layout Standard
Given a C program that performs buffer manipulations, statically (at compile
 time) identify whether the program may perform array access out of the
 array bounds.
\end_layout

\begin_layout Section
Previous work
\end_layout

\begin_layout Chapter
boa
\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename flow.png
	width 100text%

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Main components and stages
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Constraint Generator
\end_layout

\begin_layout Subsection
Integers 
\end_layout

\begin_layout Subsection
Direct array access
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting[firstline=4,lastline=5]{../tests/testcases/simple3.c}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
String manipulation functions
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting[firstline=1,lastline=15]{../tests/testcases/string1.c}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Buffer aliasing
\end_layout

\begin_layout Section
Linear Solver
\end_layout

\begin_layout Subsection
GLPK
\end_layout

\begin_layout Subsection
Elastic filter
\end_layout

\begin_layout Subsection
Blame system
\end_layout

\begin_layout Section
Implementation
\end_layout

\begin_layout Chapter
-To be named-
\end_layout

\begin_layout Section
Test system
\end_layout

\begin_layout Section
Version control
\end_layout

\begin_layout Subsection
Code reviews
\end_layout

\begin_layout Chapter
Results
\end_layout

\begin_layout Standard
We tested boa on several widespread real world programs.
 We tested to see whether boa discover real buffer overruns, and also to
 evaluate the number of false alarms and their main causes.
 The source files used in all of the experiments is availble in boa git
 repository
\begin_inset CommandInset citation
LatexCommand cite
key "git repository"

\end_inset

.
\end_layout

\begin_layout Standard
Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Performence"

\end_inset

 summerize the performence of boa on the programs we present in this document,
 the reported runnig times are the results of experiments on Dell vostro
 1310 laptop, with Intel Core2 Duo CPU T8100 2.10GHz and 2GB RAM running
 Debian GNU/Linux Wheezy (7.0.0), clang 2.9, llvm 2.9 and GLPK 4.43.
 On this humble configuration boa can analyze few thouthends lines of code
 within seconds, thus the use of elastic filter did pay off and boa can
 be used to efficiently analyze any reasonable piece of C code.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
fingerd
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
flex
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
syslog
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Source lines
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
230
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
332
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Constraints
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2894
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1206
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Running time
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.508s
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.304s
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Buffers
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
34
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Overruns reported
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Real overruns
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
boa performence on various real world examples
\begin_inset CommandInset label
LatexCommand label
name "tab:Performence"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
fingerd
\end_layout

\begin_layout Standard
We tested boa using 
\emph on
fingerd
\emph default
, unix finger deamon.
 We altered the current source code to reflect the well known buffer overrun,
 used by the Internet worm in 1988.
 The overrun is caused by using the unsafe function 
\emph on
gets
\emph default
 to read data into the 1024
\begin_inset Foot
status open

\begin_layout Plain Layout
Back in 1988 
\emph on
line
\emph default
 was 512 bytes, but it does not matter for the analysis.
\end_layout

\end_inset

 bytes buffer 
\emph on
line
\emph default
.
 As far as we know, this is the only real buffer overrun in the 230 lines
 source code.
\end_layout

\begin_layout Standard
Running on 
\emph on
fingerd
\emph default
 source, boa report overruns on 6 out of the 34 buffers.
 Next we present boa's blame for each of them, and analyze the reason for
 the reported overrun -
\end_layout

\begin_layout Paragraph
line
\end_layout

\begin_layout Standard
is the only real overrun in 
\emph on
fingerd
\emph default
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{boa}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\color red
line
\color inherit
 tests/realworld/fingerd/fingerd.c:85 
\end_layout

\begin_layout Standard
- unsafe function call gets [tests/realworld/fingerd/fingerd.c:121] 
\end_layout

\begin_layout Standard
- unknown function call realhostname_sa [tests/realworld/fingerd/fingerd.c:128]
 
\end_layout

\begin_layout Standard
- memchr call might read beyond the buffer [tests/realworld/fingerd/fingerd.c:139
] 
\end_layout

\begin_layout Standard
[ ...
 10 more lines ...
 ]
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{boa}
\end_layout

\end_inset

The overrun discovered by boa, and the real cause reported briefly.
\end_layout

\begin_layout Paragraph
rhost
\end_layout

\begin_layout Standard
is a char buffer ment to hold the host name
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{boa}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\color red
rhost
\color inherit
 tests/realworld/fingerd/fingerd.c:86 
\end_layout

\begin_layout Standard
- unknown function call realhostname_sa [tests/realworld/fingerd/fingerd.c:128]
 
\end_layout

\begin_layout Standard
- unknown function call realhostname_sa [tests/realworld/fingerd/fingerd.c:128]
 
\end_layout

\begin_layout Standard
- buffer alias with offset [tests/realworld/fingerd/fingerd.c:128] 
\end_layout

\begin_layout Standard
- buffer alias with offset [tests/realworld/fingerd/fingerd.c:128]
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{boa}
\end_layout

\end_inset


\end_layout

\begin_layout Section
flex
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Bibliography
\labelwidthstring References
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "הודים"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "Buffer Overrun Detection using Linear Programming and Static Analysis"
target "www.cs.wisc.edu/wisa/papers/ccs03/p351-ganapathy.pdf "

\end_inset


\end_layout

\begin_layout Bibliography
\labelwidthstring References
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "git repository"

\end_inset


\begin_inset CommandInset href
LatexCommand href
name "boa git repository - https://github.com/tzafrir/boa/"
target "https://github.com/tzafrir/boa/"

\end_inset


\end_layout

\end_body
\end_document
